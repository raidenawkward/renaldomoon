From a0a9e63a1e1114b3f6a8e6a08167698334739f32 Mon Sep 17 00:00:00 2001
From: "tome.huang" <tome.huang@samsung.com>
Date: Wed, 31 Aug 2016 17:57:10 +0800
Subject: [PATCH] add chapter

about 'functional specification manual'
---
 More Joel on Software/More Joel on Software.md | 135 ++++++++++++++++++++++++-
 1 file changed, 134 insertions(+), 1 deletion(-)

diff --git a/More Joel on Software/More Joel on Software.md b/More Joel on Software/More Joel on Software.md
index d052313..f02209a 100644
--- a/More Joel on Software/More Joel on Software.md	
+++ b/More Joel on Software/More Joel on Software.md	
@@ -1,6 +1,8 @@
 More Joel on Software
 ===================
 
+*(此文档中包含但不仅限于这本书的读后感, 也包括我个人发现的问题及理解 --tome.huang)*
+
 
 [toc]
 
@@ -121,4 +123,135 @@ char* str = "\006hello!";
 1. String 内容不可变. 每次变更是生成了新的String. 大量String直接操作后会产生多个无用引用而
 引起jvm开始gc, 速度会变慢.
 2. StringBuffer**线程安全**, 维护缓冲区, 支持insert, append等操作, 对内容进行修改但不产生新对象.
-3. StringBuilder**线程不安全**, 提供与StringBuffer兼容的API, 但不保证同步. 单个线程中比StringBuffer快
\ No newline at end of file
+3. StringBuilder**线程不安全**, 提供与StringBuffer兼容的API, 但不保证同步. 单个线程中比StringBuffer快
+
+
+
+
+# 软件功能规格说明书
+-------------------
+
+## 它能带来的好处是
+1. 编写代码的依据
+- 功能定义先于编码, 能更加清晰地划分模块, 定义接口
+- 更加清晰地讨论并形成解决方案
+
+2. 减少沟通时间
+ 产品设计, 开发者, 测试人员及, 维护人员和客户都可能是读者
+
+3. 制定开发进度的依据
+ 进度表对于开发过程同样重要
+
+4. *细节问题会更早地暴露出来*
+
+
+##功能规格说明书说应该包括
+
+- 是功能说明书而不是技术说明书
+- 从使用者的角度完整描述产品行为
+- 设计产品最重要的是完成对用户体验的设计
+
+*我目前对实现过程的理解:*
+> 有哪些界面 -> 各界面功能 -> 界面间的跳转 -> work flow -> data flow -> 数据定义 -> 接口定义 -> 实现
+
+应包含的内容:
+
+0. 免责声明
+    保护自己
+
+1. 作者
+
+2. 概述
+    2.1. 文档的阅读人群
+    2.2. 文档涉及的范围
+    2.3. 文档不包含的内容
+
+3. 使用场景
+    构想真实生活中有**代表性**的人物的**逼真的**使用场景
+
+    *可以包含:*
+>    -他是谁
+>    -他的职位/身份
+>    -与产品有关场景的描述
+>    -他如何使用产品
+>    -产品如何帮他解决了问题
+>    -解决问题后他变成了什么样子
+
+4. 非目标
+    4.1. 当前文档不做什么
+    4.2. 当前文档设计中尚不支持的功能列表
+
+5. 完整/全部业务流程图
+
+6. *每个界面的规格说明*
+    6.1. 为每个界面制定标准化命名
+    6.2. *小节号可以代表界面间的关系*
+    6.3. 界面中详细的功能和细节
+    6.4. 界面中特别需要注意的内容
+    6.5. **当前待解决的问题**
+        6.5.1. 问题描述
+        6.5.2. 当前进展
+        6.5.3. 下一步需要做什么
+    6.6. 必要的图表
+    6.7. 必要的技术注解
+    6.8. 显示说明对其它界面的跳转条件
+    6.9. 界面的限制条件(用户输入限制, 软件/库/版本依赖, ..)
+
+7. 不同角度的阅读者的注解
+
+8. *修改记录*
+spay项目和公司其它项目一般包含这个
+
+
+##功能规格说明书说应及时更新
+
+##这个文档应该由谁来编写?
+**项目经理**
+- 负责需求收集和软件功能设计, 然后编写此文档
+- 协调与其它部门人员的合作(营销,文档,测试,本地化,其它)
+- 了解公司的宏观战略
+
+程序员
+- 用代码实现以规格说明书的形式定义的功能
+
+##项目经理的人选
+1. 开发人员一般不适合做项目经理
+开发人员的普遍弱项
+- 文笔
+- 市场嗅觉
+- **用户视角**
+- 界面设计
+
+2. 营销人员一般不适合做项目经理
+- 一般不具备技术素养
+
+##项目经理与程序员的关系
+- 避免程序员直接听命于项目经理
+- *项目经理和程序员以功能规格说明书做为工作的基本依据*
+- 项目经理要求实现的功能或所做的变更需要说服程序员
+
+
+##编写功能规格说明书的准则
+
+功能规格说明书最大的问题是:
+> - 没有人读
+> - 参考力不强
+> - 不能做为实现功能有力的依据
+
+1. 要幽默
+   *引起足够的阅读的兴趣, 同样使别人更容易理解*
+
+2. 像编写用大脑执行的代码一样写说明书
+    - *内容应该便于理解， 而不是机械地描述*
+    - *形象地描述更便于清晰地表达*
+    - *必要的内容放进技术注解中, 并及时呈现*
+
+3. 写得尽可能简单
+    - "一图胜千言"
+    - 避免单调的排版
+
+4. 重读并修改几遍
+
+5. 尽量不套用模板
+    随着模板的积累, 会带有冗余内容, 变得不精简
+
-- 
2.5.1.windows.1

